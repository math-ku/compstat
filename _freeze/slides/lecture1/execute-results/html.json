{
  "hash": "8789b3a811270e1b818b2ea4c2576543",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture 1: Introduction\"\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(here::here(\"data\", \"top100dih.RData\"))\nphipsi2 <- na.omit(dataset)\nphipsi <- read.table(here::here(\"data\", \"phipsi.tsv\"), header = TRUE)\nphipsi[, c(\"phi\", \"psi\")] <- pi * phipsi[, c(\"phi\", \"psi\")] / 180\n\nlibrary(ggplot2)\n\ntheme_set(theme_grey(base_size = 9))\n```\n:::\n\n\n## What is Computational Statistics?\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n- Broad field that can mean different things depending on context.\n- One definitions is that it is the use of computational methods to solve\n  statistical problems, for instance\n  - simulation,\n  - optimization,\n  - numerical integration,\n  - data analysis, and\n  - visualization.\n\n:::\n\n::: {.column width=\"50%\"}\n\n![Running examples: Amino Acid Angles](../images/PhiPsi_creative.jpg){width=70%}\n\n:::\n\n::::\n\n## Histograms\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(\n  phipsi$phi,\n  prob = TRUE,\n  xlab = expression(phi),\n  main = NULL\n)\nrug(phipsi$phi)\n```\n\n::: {.cell-output-display}\n![](lecture1_files/figure-html/hist1-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(\n  phipsi$psi,\n  prob = TRUE,\n  xlab = expression(psi),\n  main = NULL\n)\nrug(phipsi$psi)\n```\n\n::: {.cell-output-display}\n![](lecture1_files/figure-html/hist2-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::::\n\n## Density Estimation\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlines(\n  density(phipsi$phi),\n  col = \"red\",\n  lwd = 2\n)\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture1_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlines(\n  density(phipsi$psi),\n  col = \"red\",\n  lwd = 2\n)\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n::: ::::\n\n## Statistical Topics of the Course\n\n### Smoothing\n\n- What does `density()` do?\n- Nonparametric estimators\n- Choosing tuning parameters\n\n. . .\n\n### Simulation\n\n- How do we efficiently simulate from a target distribution?\n- Assessing results from Monte Carlo methods\n- What if we cannot compute the density?\n\n. . .\n\n### Optimization\n\n- How do we compute the MLE?\n- How to we deal with large data sets?\n\n## Computational Topics of the Course\n\n### Implementation\n\n- Writing functions\n- Object-oriented programming\n\n. . .\n\n### Correctness\n\n- Testing\n- Debugging\n\n. . .\n\n### Efficiency\n\n- Profiling\n- Optimizing\n- Benchmarking\n\n## Staff\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n### Instructor\n\nJohan Larsson, postdoctoral researcher\n\n![](../images/johan.jpg){width=50%}\n\n#### Contact\n\nUse Absalon for course-related questions and email (see Absalon) for personal\nmatters. :::\n\n::: {.column width=\"45%\"}\n\n### Teaching Assistant\n\nJinyang Liu, PhD student\n\n::: ::::\n\n## Assignments\n\n- Main course work of the course\n- Eight assignments, two for each topic\n- Four topics\n  - Smoothing\n  - Univariate simulation\n  - The EM algorithm\n  - Stochastic optimization\n- Pick one assignment per topic.\n\n## Examination\n\n### Presentations\n\n- Present solution to one of the assignments.\n- On weeks 3, 4, 6, and 7 (Thursday afternoon sessions).\n- Groups of 2-3 students\n- Presentation, discussion, and feedback\n- [Register in Absalon](https://absalon.ku.dk/courses/76985/groups#tab-25490)\n  (limited slots assignment)\n- Compulsory but not graded\n- Work-in-progress solutions are fine\n\n. . .\n\n### Oral Examination\n\n- Oral exam, presented indivudally.\n- Prepare four presentations, one for each assignment you picked.\n\n## Schedule\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n### Lectures\n\n- Tuesdays and Thursdays, 10:15–12:00 (Johan)\n\n### Exercise Sessions\n\n- Thursdays, 08:15–10:00 (Jinyang)\n\n### Presentations\n\n- Thursdays, 13:15–15:00 (Johan)\n- Only weeks 3, 4, 6, and 7 :::\n\n::: {.column width=\"50%\"}\n\n### Examination\n\n- November 6 and 7 (8.15-17.30, tentative)\n- Room to be announced :::\n\n::::\n\n## Course Literature\n\n### Computational Statistics with R\n\nMain textbook for the course, written by Niels Richard Hansen.\n\n- Available online at <https://cswr.nrhstat.org/>\n- Not yet complete, but we only use parts that are.\n- [Companion package](https://github.com/nielsrhansen/CSwR/tree/master/CSwR_package):\n  install with `pak::pak(\"github::nielsrhansen/CSwR/CSwR_package\")`.\n\n. . .\n\n### Advanced R\n\nAuxiliary textbook, written by Hadley Wickham.\n\n- Available online at <https://adv-r.hadley.nz/>\n\n- Covers more advanced R programming topics.\n\n- We will use selected chapters.\n\n## Absalon\n\nAccessed at [absalon.ku.dk](https://absalon.ku.dk/).\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n- **Course Material**: Slides, videos, data, groups, and assignments.\n- Actually based on Canvas (but rebranded for UCPH).\n- Download Canvas Student app for your phone.\n- Updated as we go along.\n\n:::\n\n::: {.column width=\"50%\"}\n\n![Absalon](../images/absalon.jpg) is the course platform.\n\n:::\n\n::::\n\n# Programming in R\n\n## Generative AI\n\n- You can use generative AI to help you with your assignments.\n- But you must understand the results.\n- Can help your learning if used correctly.\n- But also hamper your learning if used inappropriately (too much)\n- Beware of hallucinations!\n\n## Prerequisite R Knowledge\n\nWe expect knowledge of\n\n- data structures (vectors, lists, data frames),\n- control structures (loops, if-then-else),\n- function calling,\n- interactive and script usage (`source`) of R.\n\n. . .\n\nAll of this is covered in chapters 1–5 of\n[Advanced R](https://adv-r.hadley.nz/).\n\nBut you **do not** need to be an experienced programmer.\n\n---\n\n## Warm-Up Exercises\n\n### Exercise 1\n\nCan you list three ways to access element `a` in this list?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nl <- list(a = 1, b = 2)\n```\n:::\n\n\n\n\n. . .\n\n### Exercise 2\n\nWrite a for loop that prints \"even\" if the loop variable is even, \"odd\" if the\nloop variable is odd, and exits if is larger than 10.\n\n# Functions\n\n## Functions in R\n\n- Everything that happens in R is the result of a function call. Even `+`, `[`\n  and `<-` are functions.\n- An R function takes a number of _arguments_, and when a function call is\n  evaluated it computes a _return value_.\n- Functions can return any R object, including functions!\n- Implementations of R functions are collected into source files, which can be\n  organized into packages.\n- The order of your functions in the script does not matter.\n",
    "supporting": [
      "lecture1_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}